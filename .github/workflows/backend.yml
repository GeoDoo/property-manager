name: Backend CI

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'
  workflow_dispatch:  # Allow manual triggering

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: geodoo/property-manager/backend

permissions:
  contents: write
  pages: write
  id-token: write
  packages: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Build and test with Gradle
        env:
          DOCKER_HOST: unix:///var/run/docker.sock
          TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE: /var/run/docker.sock
          TESTCONTAINERS_RYUK_DISABLED: true
        run: |
          cd backend
          ./gradlew test jacocoTestReport jacocoTestCoverageVerification --info

      - name: Generate JaCoCo Badges
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          jacoco-csv-file: backend/build/reports/jacoco/test/jacocoTestReport.csv
          badges-directory: .github/badges
          generate-branches-badge: true
          generate-summary: true

      - name: Log coverage percentage
        run: |
          echo "Coverage percentage: ${{ steps.jacoco.outputs.coverage }}"
          echo "Branch coverage percentage: ${{ steps.jacoco.outputs.branches }}"

      - name: Commit and push the badge if changed
        if: github.ref == 'refs/heads/main'
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Update code coverage badges'
          add: '.github/badges/jacoco*.svg'

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: backend/build/reports/tests/
          retention-days: 30

      - name: Upload JaCoCo report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: backend/build/reports/jacoco/
          retention-days: 30
          
      - name: Upload test coverage improvement plan
        if: always()
        run: |
          cd backend
          ./gradlew testCoverageImprovementPlan

      - name: Upload improvement plan
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-improvement-plan
          path: backend/build/reports/test-coverage-improvement-plan.md
          retention-days: 30

  deploy-pages:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Download JaCoCo report
        uses: actions/download-artifact@v4
        with:
          name: jacoco-report
          path: jacoco-report

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'jacoco-report/test/html'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  build-and-push-image:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max 