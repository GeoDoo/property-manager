name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Create badges directory
        run: mkdir -p .github/badges

      - name: Run tests with Docker Compose
        run: docker compose -f docker-compose.test.yml up test --build --abort-on-container-exit --force-recreate --exit-code-from test
        env:
          GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m"

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: backend/build/reports/jacoco/test/html/
          retention-days: 7

      - name: Generate coverage badge
        if: success()
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: backend/build/reports/jacoco/test/jacocoTestReport.csv
          badges-directory: .github/badges
          generate-coverage-badge: true
          generate-coverage-endpoint: true
          coverage-badge-filename: jacoco.svg
          branches-badge-filename: branches.svg
          fail-if-coverage-less-than: 0
          fail-if-branches-less-than: 0
          coverage-label: coverage
          branches-label: branches

      - name: Commit and push coverage badges
        if: github.ref == 'refs/heads/main' && success()
        run: |
          mkdir -p .github/badges
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .github/badges/jacoco.svg .github/badges/branches.svg || true
          git commit -m "Update coverage badges" || echo "No changes to commit"
          git push || echo "No changes to push"

      - name: Add coverage link to PR
        if: github.event_name == 'pull_request' && success()
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `### Coverage Report ðŸ“Š\n\nA new coverage report has been generated for this PR.\n\nCoverage report is available as an artifact in this workflow run.\n\n`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            }); 