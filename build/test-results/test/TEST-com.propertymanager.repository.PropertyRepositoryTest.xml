<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.propertymanager.repository.PropertyRepositoryTest" tests="6" skipped="0" failures="0" errors="0" timestamp="2025-03-26T09:46:10" hostname="georgioskarametas-MacBook-Pro" time="0.126">
  <properties/>
  <testcase name="findAll_ShouldReturnAllProperties_WithAutoCommit()" classname="com.propertymanager.repository.PropertyRepositoryTest" time="0.098"/>
  <testcase name="verifyNoProperties()" classname="com.propertymanager.repository.PropertyRepositoryTest" time="0.004"/>
  <testcase name="saveAndRollback_ShouldNotPersistProperty()" classname="com.propertymanager.repository.PropertyRepositoryTest" time="0.006"/>
  <testcase name="findById_ShouldReturnProperty_WithAutoCommit()" classname="com.propertymanager.repository.PropertyRepositoryTest" time="0.004"/>
  <testcase name="delete_ShouldRemoveProperty_WithAutoCommit()" classname="com.propertymanager.repository.PropertyRepositoryTest" time="0.009"/>
  <testcase name="save_ShouldPersistProperty_WithAutoCommit()" classname="com.propertymanager.repository.PropertyRepositoryTest" time="0.003"/>
  <system-out><![CDATA[2025-03-26T09:46:10.060Z  INFO 69168 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.propertymanager.repository.PropertyRepositoryTest]: PropertyRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-26T09:46:10.076Z  INFO 69168 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.propertymanager.PropertyManagerApplication for test class com.propertymanager.repository.PropertyRepositoryTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.3)

2025-03-26T09:46:10.102Z  INFO 69168 --- [    Test worker] c.p.repository.PropertyRepositoryTest    : Starting PropertyRepositoryTest using Java 21.0.3 with PID 69168 (started by georgios.karametas in /Users/georgios.karametas/Dev/property-manager)
2025-03-26T09:46:10.102Z  INFO 69168 --- [    Test worker] c.p.repository.PropertyRepositoryTest    : The following 1 profile is active: "test"
2025-03-26T09:46:10.163Z  INFO 69168 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-26T09:46:10.169Z  INFO 69168 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6 ms. Found 1 JPA repository interface.
2025-03-26T09:46:10.179Z  INFO 69168 --- [    Test worker] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2025-03-26T09:46:10.191Z  INFO 69168 --- [    Test worker] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:39f8817d-21fd-4610-aba4-2ce2d1977a5c;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-03-26T09:46:10.295Z  INFO 69168 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-26T09:46:10.296Z  WARN 69168 --- [    Test worker] .h.j.b.i.EntityManagerFactoryBuilderImpl : HHH000059: Defining hibernate.transaction.flush_before_completion=true ignored in HEM
2025-03-26T09:46:10.298Z  INFO 69168 --- [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-03-26T09:46:10.301Z  INFO 69168 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-26T09:46:10.305Z  WARN 69168 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.
2025-03-26T09:46:10.305Z  WARN 69168 --- [    Test worker] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
Hibernate: 
    drop table if exists properties cascade
Hibernate: 
    create table properties (
        bathrooms integer not null,
        bedrooms integer not null,
        price numeric(38,2) not null,
        square_footage float(53) not null,
        id bigserial not null,
        description varchar(1000),
        address varchar(255),
        primary key (id)
    )
2025-03-26T09:46:10.345Z  INFO 69168 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-26T09:46:10.383Z  INFO 69168 --- [    Test worker] c.p.repository.PropertyRepositoryTest    : Started PropertyRepositoryTest in 0.305 seconds (process running for 6.504)
Hibernate: 
    insert 
    into
        properties
        (address, bathrooms, bedrooms, description, price, square_footage) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        properties
        (address, bathrooms, bedrooms, description, price, square_footage) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        p1_0.id,
        p1_0.address,
        p1_0.bathrooms,
        p1_0.bedrooms,
        p1_0.description,
        p1_0.price,
        p1_0.square_footage 
    from
        properties p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.address,
        p1_0.bathrooms,
        p1_0.bedrooms,
        p1_0.description,
        p1_0.price,
        p1_0.square_footage 
    from
        properties p1_0
Hibernate: 
    insert 
    into
        properties
        (address, bathrooms, bedrooms, description, price, square_footage) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        properties
        (address, bathrooms, bedrooms, description, price, square_footage) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        properties
        (address, bathrooms, bedrooms, description, price, square_footage) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    delete 
    from
        properties 
    where
        id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.address,
        p1_0.bathrooms,
        p1_0.bedrooms,
        p1_0.description,
        p1_0.price,
        p1_0.square_footage 
    from
        properties p1_0 
    where
        p1_0.id=?
Hibernate: 
    insert 
    into
        properties
        (address, bathrooms, bedrooms, description, price, square_footage) 
    values
        (?, ?, ?, ?, ?, ?)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
